{"version":3,"sources":["images/icon-sun.svg","images/icon-moon.svg","components/TodoHead.js","images/icon-cross.svg","components/NewAdd.js","utils/items.js","components/Lists.js","components/Filter.js","components/MainItems.js","components/Footer.js","hooks/useWindowSize.js","App.js","reportWebVitals.js","index.js"],"names":["TodoHead","theme","changeTheme","className","src","dark","sunLogo","moonLogo","alt","onClick","NewAdd","ref","type","placeholder","onKeyDown","e","key","crossLogo","ForwardNewAdd","React","forwardRef","ItemTypes","Lists","id","index","moveCont","task","onDelete","onToggle","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","isDragging","drag","style","opacity","complete","Filter","width","onCurrent","filter","map","now","text","toUpperCase","slice","length","indexOf","MainItems","tasks","setTasks","onClear","useState","itemAmt","setItemAmt","useEffect","completedItems","reduce","first","second","useCallback","dragCont","update","$splice","Footer","href","target","rel","useWindowSize","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","App","completed","setCompleted","active","setActive","setCurrent","newTaskRef","storageTask","themeStorage","JSON","parse","localStorage","getItem","loadThemeFromStorage","setTheme","changeCurrent","split","initial","Object","keys","varTheme","vars","document","documentElement","setProperty","loadedTask","setItem","stringify","console","log","mainBackground","itemsBackground","firstFont","secondFont","thirdFont","fourthFont","border","DndProvider","backend","TouchBackend","options","enableMouseEvents","newTask","value","oldTasks","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3fc10366.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","// import { useState, useEffect } from 'react';\r\nimport sunLogo from '../images/icon-sun.svg';\r\nimport moonLogo from '../images/icon-moon.svg';\r\n\r\nconst TodoHead = ({ theme, changeTheme }) => {\r\n\r\n    return (\r\n        <h1>\r\n            TODO\r\n            <img className=\"app-theme light\" src={`${!theme || !theme.dark ? moonLogo : sunLogo}`}\r\n                alt=\"Sun icon to change app to light theme\"\r\n                onClick={() => changeTheme()} />\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default TodoHead\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from 'react';\r\nimport crossLogo from '../images/icon-cross.svg'\r\n\r\nconst NewAdd = ({ onClick }, ref) => {\r\n\r\n    return (\r\n        <div className=\"new\">\r\n            <span className=\"circle\"></span>\r\n            <input type=\"text\"\r\n                ref={ref}\r\n                className=\"text\"\r\n                placeholder=\"Create New Todo...\"\r\n                onKeyDown={(e) => e.key === 'Enter' && onClick()}\r\n            />\r\n            <img className=\"add\" src={crossLogo} alt=\"\" onClick={onClick} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ForwardNewAdd = React.forwardRef(NewAdd);\r\n\r\nexport default ForwardNewAdd;\r\n\r\n","export const ItemTypes = {\r\n    CONTAINER: 'div',\r\n}","import { useRef } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { ItemTypes } from '../utils/items';\r\nimport crossLogo from '../images/icon-cross.svg';\r\n\r\nconst Lists = ({ id, index, moveCont, task, onDelete, onToggle }) => {\r\n\r\n    const ref = useRef(null);\r\n\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: ItemTypes.CONTAINER,\r\n        collect(monitor) {\r\n            return {\r\n                handlerId: monitor.getHandlerId(),\r\n            };\r\n        },\r\n\r\n        hover(item, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            // Don't replace items with themselves\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            // Determine rectangle on screen\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            // Get vertical middle\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            // Determine mouse position\r\n            const clientOffset = monitor.getClientOffset();\r\n            // Get pixels to the top\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Dragging upwards\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Time to actually perform the action\r\n            moveCont(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: ItemTypes.CONTAINER,\r\n        item: () => {\r\n            return { id, index };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        <div className=\"list\" ref={ref} data-handler-id={handlerId} style={{ opacity: isDragging ? 0.4 : 1 }}>\r\n            <div className={`circle ${task.complete && \"complete\"}`}\r\n                onClick={() => onToggle(task.id)}></div>\r\n            <span className={`task ${task.complete ? \"strikethrough\" : \"\"}`}>{task.item}</span>\r\n            <img className=\"delete\" src={crossLogo} alt=\"\" onClick={() => onDelete(task.id)} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Lists\r\n\r\n","// import { useState } from \"react\"\r\n// import { useEffect } from \"react/cjs/react.development\"\r\n\r\nconst Filter = ({ current, width, onCurrent }) => {\r\n\r\n    const filter = [\"all\", \"active\", \"completed\"];\r\n\r\n    function properCase(text) {\r\n        return text[0].toUpperCase() + text.slice(1, text.length)\r\n    }\r\n\r\n    return (\r\n        <div className={`filter ${width >= 768 && \"inside\"}`}>\r\n            {filter.map(now => {\r\n                return <span\r\n                    key={filter.indexOf(now)}\r\n                    onClick={onCurrent}\r\n                    className={`${now} ${current === now ? \"current\" : \"\"}`}>\r\n                    {properCase(now)}\r\n                </span>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport update from 'immutability-helper';\r\nimport Lists from \"./Lists\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst MainItems = ({ tasks, setTasks, current, width, onDelete, onToggle, onClear, onCurrent }) => {\r\n\r\n    const [itemAmt, setItemAmt] = useState(0)\r\n\r\n    useEffect(() => {\r\n        //update item amount\r\n        const completedItems = tasks.reduce((first, second) => {\r\n            second.complete && first++;\r\n            return first;\r\n        }, 0)\r\n\r\n        if (current === \"completed\") {\r\n            setItemAmt(completedItems)\r\n        }\r\n        else {\r\n            setItemAmt(tasks.length - completedItems)\r\n        }\r\n    }, [current, tasks])\r\n\r\n    function wordingNumbers() {\r\n        if (current !== \"all\") {\r\n            if (itemAmt === 0) {\r\n                return `No ${current} items`\r\n            }\r\n            else {\r\n                return `${itemAmt} ${current} item(s)`\r\n            }\r\n        }\r\n        else if (current === \"all\" && itemAmt > 0) {\r\n            return `${itemAmt} item(s) left`\r\n        }\r\n        else {\r\n            return \"No items left\"\r\n        }\r\n    }\r\n\r\n    const moveCont = useCallback((dragIndex, hoverIndex) => {\r\n        const dragCont = tasks[dragIndex];\r\n        setTasks(update(tasks, {\r\n            $splice: [\r\n                [dragIndex, 1],\r\n                [hoverIndex, 0, dragCont],\r\n            ],\r\n        }));\r\n    }, [tasks]);\r\n\r\n    return (\r\n        <main className=\"lists\">\r\n            {tasks.map((task, index) => {\r\n                return <Lists key={task.id}\r\n                    index={index}\r\n                    id={task.id}\r\n                    task={task}\r\n                    onDelete={onDelete}\r\n                    onToggle={onToggle}\r\n                    moveCont={moveCont}\r\n                />\r\n            })}\r\n            <div className=\"last-row\">\r\n                <span className=\"items\">{wordingNumbers()}</span>\r\n                {width >= 768 &&\r\n                    <Filter\r\n                        current={current}\r\n                        onCurrent={onCurrent}\r\n                        width={width} />}\r\n                <button className=\"clear\" onClick={onClear}>Clear Completed</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default MainItems\r\n","const Footer = () => {\r\n    return (\r\n        <footer className=\"attribution\">\r\n            Challenge by <a href=\"https://www.frontendmentor.io/challenges/todo-app-Su1_KokOW\" target=\"_blank\" rel=\"noreferrer\">Frontend\r\n                Mentor</a>.\r\n            Coded by <a href=\"https://github.com/hidayahmsabah/to-do-list-react\" target=\"_blank\" rel=\"noreferrer\">DayahMSab</a>.\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useLayoutEffect, useState } from 'react';\r\n\r\nfunction useWindowSize() {\r\n\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n\r\n        function updateSize() {\r\n            setSize([window.innerWidth, window.innerHeight]);\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n\r\n    return size;\r\n}\r\n\r\nexport default useWindowSize;\r\n\r\n","import './App.css';\nimport { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DndProvider } from 'react-dnd';\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport TodoHead from './components/TodoHead';\nimport NewAdd from './components/NewAdd';\nimport MainItems from './components/MainItems';\nimport Filter from './components/Filter';\nimport Footer from './components/Footer';\nimport useWindowSize from './hooks/useWindowSize';\n\nfunction App() {\n\n  const [tasks, setTasks] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const [active, setActive] = useState([]);\n  const [current, setCurrent] = useState(\"all\")\n  const [width] = useWindowSize();\n  const newTaskRef = useRef(null);\n  const storageTask = \"taskKey\";\n  const themeStorage = \"themeKey\";\n\n  function loadThemeFromStorage() {\n    const { dark } = JSON.parse(localStorage.getItem(themeStorage)) ?? {};\n    return { dark };\n  };\n\n  const [theme, setTheme] = useState(loadThemeFromStorage());\n\n  useEffect(() => {\n    //setting tasklists\n    const loadedTask = JSON.parse(localStorage.getItem(storageTask))\n    loadedTask && loadedTask.length > 0 && setTasks(loadedTask)\n\n    //change theme\n    changeTheme(true);\n  }, [])\n\n  useEffect(() => {\n    //store tasks into storage\n    localStorage.setItem(storageTask, JSON.stringify(tasks))\n\n    //update completed items\n    setCompleted(tasks.filter(task => task.complete))\n\n    //update active items\n    setActive(tasks.filter(task => !task.complete))\n  }, [tasks]);\n\n  useEffect(() => {\n    localStorage.setItem(themeStorage, JSON.stringify(theme))\n    console.log(theme)\n  }, [theme])\n\n  function addTask() {\n    const newTask = newTaskRef.current.value;\n    newTask && setTasks(oldTasks =>\n      [...oldTasks, { id: uuidv4(), item: newTask, complete: false }]);\n    newTaskRef.current.value = null;\n  }\n\n  function deleteTask(id) {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  function completeTask(id) {\n    setTasks(tasks.map(task => {\n      return task.id === id ? { ...task, complete: !task.complete } : task;\n    }))\n  }\n\n  function clearCompleted() {\n    setTasks(tasks.filter(task => !task.complete))\n  }\n\n  function changeCurrent(e) {\n    setCurrent(e.target.className.split(\" \")[0])\n  }\n\n  function conditionalTaskList() {\n    if (current === \"all\") {\n      return tasks\n    }\n    else if (current === \"active\") {\n      return active\n    }\n    else {\n      return completed\n    }\n  }\n\n  function changeTheme(initial = false) {\n    if (!initial) {\n      if (!theme || !theme.dark) { //light turns to dark\n        for (let vars of Object.keys(varTheme)) {\n          document.documentElement.style.setProperty(`--${vars}`, varTheme[vars][0]);\n        }\n        setTheme({ ...theme, dark: true })\n      }\n      else {\n        for (let vars of Object.keys(varTheme)) { //dark turns to light\n          document.documentElement.style.setProperty(`--${vars}`, varTheme[vars][1]);\n        }\n        setTheme({ ...theme, dark: false })\n      }\n    }\n    else {\n      if (!theme || theme.dark) { //light stays light\n        for (let vars of Object.keys(varTheme)) {\n          document.documentElement.style.setProperty(`--${vars}`, varTheme[vars][0]);\n        }\n        setTheme({ ...theme, dark: true })\n      }\n      else {\n        for (let vars of Object.keys(varTheme)) { //dark stays dark\n          document.documentElement.style.setProperty(`--${vars}`, varTheme[vars][1]);\n        }\n        setTheme({ ...theme, dark: false })\n      }\n    }\n  }\n\n  let varTheme = {\n    mainBackground: [\"hsl(235, 21%, 11%)\", \"hsl(236, 33%, 92%)\"],\n    itemsBackground: [\"hsl(235, 24%, 19%)\", \"hsl(0, 0%, 98%)\"],\n    firstFont: [\"hsl(236, 33%, 92%)\", \"hsl(236, 33%, 92%)\"],\n    secondFont: [\"hsl(234, 11%, 52%)\", \"hsl(236, 9%, 61%)\"],\n    thirdFont: [\"hsl(234, 39%, 85%)\", \"hsl(235, 19%, 35%)\"],\n    fourthFont: [\"hsl(233, 14%, 35%)\", \"hsl(233, 11%, 84%)\"],\n    border: [\"hsl(233, 14%, 35%)\", \"hsl(236, 33%, 92%)\"]\n  }\n\n  const opts = {\n    enableMouseEvents: true,\n  }\n\n  return (\n    <DndProvider backend={TouchBackend} options={opts}>\n      <header className={`${!theme || !theme.dark ? \"\" : \"dark\"}`}></header>\n      <TodoHead theme={theme} changeTheme={changeTheme} />\n      <NewAdd ref={newTaskRef} onClick={addTask} />\n      <MainItems width={width}\n        tasks={conditionalTaskList()}\n        setTasks={setTasks}\n        onDelete={deleteTask}\n        onToggle={completeTask}\n        onClear={clearCompleted}\n        onCurrent={changeCurrent}\n        current={current} />\n      {width < 768 && < Filter onCurrent={changeCurrent} current={current} />}\n      <p>Drag and drop to reorder list</p>\n      <Footer />\n    </DndProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}